import React, { useEffect, useState } from "react";
import { Link } from "react-router-dom";
import { confirmAlert } from "react-confirm-alert";
import "react-confirm-alert/src/react-confirm-alert.css";
import { deletePromotion, fetchPromotion } from "../../../service/api";

const Promotion = () => {
  const [promotions, setPromotions] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  const getPromotions = async () => {
    try {
      setLoading(true);
      const response = await fetchPromotion();
      setPromotions(response.data.data);
    } catch (error) {
      setError("C√≥ l·ªói khi l·∫•y d·ªØ li·ªáu.");
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    getPromotions();
  }, []);

  const handleDelete = (id) => {
    confirmAlert({
      title: "X√°c nh·∫≠n x√≥a",
      message: "B·∫°n c√≥ ch·∫Øc ch·∫Øn mu·ªën x√≥a khuy·∫øn m√£i n√†y?",
      buttons: [
        {
          label: "C√≥",
          onClick: async () => {
            try {
              await deletePromotion(id);
              setPromotions((prev) =>
                prev.filter((promotion) => promotion._id !== id)
              );
            } catch (error) {
              alert("C√≥ l·ªói x·∫£y ra khi x√≥a khuy·∫øn m√£i.");
            }
          },
        },
        { label: "Kh√¥ng" },
      ],
    });
  };

  const getStatusLabel = (status) => {
    switch (status) {
      case 0:
        return "üîµ ƒêang di·ªÖn ra";
      case 1:
        return "üî¥ ƒê√£ s·ª≠ d·ª•ng";
      case 2:
        return "üü° Ch∆∞a b·∫Øt ƒë·∫ßu";
      default:
        return "‚ö™ Kh√¥ng x√°c ƒë·ªãnh";
    }
  };

  return (
    <div className="container-fluid">
      <div className="d-flex justify-content-between align-items-center mb-4">
        <h1 className="h3 text-gray-800">Danh S√°ch Khuy·∫øn M√£i</h1>
        <div>
          <button className="btn btn-secondary me-2" onClick={getPromotions}>
            üîÑ L√†m m·ªõi
          </button>
          <Link className="btn btn-primary" to="/admin/vouchers/add">
            ‚ûï Th√™m Khuy·∫øn M√£i
          </Link>
        </div>
      </div>
      <p className="mb-4">
        ƒê√¢y l√† danh s√°ch t·∫•t c·∫£ c√°c khuy·∫øn m√£i trong h·ªá th·ªëng.
      </p>

      <div className="card shadow mb-4">
        <div className="card-header py-3">
          <h6 className="m-0 font-weight-bold text-primary">Khuy·∫øn M√£i</h6>
        </div>
        <div className="card-body">
          <div className="table-responsive">
            {loading && (
              <div className="text-center">
                <div className="spinner-border text-primary" role="status">
                  <span className="visually-hidden">Loading...</span>
                </div>
              </div>
            )}
            {error && !loading && (
              <div className="alert alert-danger" role="alert">
                {error}
              </div>
            )}
            {!loading && !error && (
              <table className="table table-bordered table-striped">
                <thead>
                  <tr>
                    <th>M√£ KM</th>
                    <th>T√™n KM</th>
                    <th>Lo·∫°i KM</th>
                    <th>Gi√° Tr·ªã KM</th>
                    <th>Ng√†y B·∫Øt ƒê·∫ßu</th>
                    <th>Ng√†y K·∫øt Th√∫c</th>
                    <th>Tr·∫°ng Th√°i</th>
                    <th>H√†nh ƒê·ªông</th>
                  </tr>
                </thead>
                <tbody>
                  {promotions.length > 0 ? (
                    promotions.map((promotion) => (
                      <tr key={promotion._id}>
                        <td>{promotion.MaKM}</td>
                        <td>{promotion.TenKM}</td>
                        <td>
                          {promotion.LoaiKM === "percentage"
                            ? "Gi·∫£m theo %"
                            : "Gi·∫£m s·ªë ti·ªÅn c·ªë ƒë·ªãnh"}
                        </td>
                        <td>
                          {promotion.LoaiKM === "percentage"
                            ? `${promotion.GiaTriKM}%`
                            : `${promotion.GiaTriKM} VND`}
                        </td>
                        <td>
                          {new Date(promotion.NgayBD).toLocaleDateString()}
                        </td>
                        <td>
                          {new Date(promotion.NgayKT).toLocaleDateString()}
                        </td>
                        <td>
                          <span className="badge bg-info">
                            {getStatusLabel(promotion.TrangThai)}
                          </span>
                        </td>
                        <td className="d-flex justify-content-center gap-3">
                          <Link
                            to={`/admin/vouchers/edit/${promotion._id}`}
                            className="btn btn-warning btn-sm"
                          >
                            <i className="fas fa-edit"></i> Ch·ªânh S·ª≠a
                          </Link>
                          <button
                            className="btn btn-danger btn-sm"
                            onClick={() => handleDelete(promotion._id)}
                          >
                            <i className="fas fa-trash"></i> X√≥a
                          </button>
                        </td>
                      </tr>
                    ))
                  ) : (
                    <tr>
                      <td colSpan={8} className="text-center">
                        Kh√¥ng c√≥ d·ªØ li·ªáu.
                      </td>
                    </tr>
                  )}
                </tbody>
              </table>
            )}
          </div>
        </div>
      </div>
    </div>
  );
};

export default Promotion;
