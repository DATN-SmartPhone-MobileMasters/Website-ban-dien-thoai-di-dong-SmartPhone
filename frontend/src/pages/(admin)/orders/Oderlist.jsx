import React, { useEffect, useState } from "react";
import { Link, useLocation } from "react-router-dom";
import { message } from "antd";
import { fetchOrders } from "../../../service/api";

const OrderList = () => {
  const [hoaDons, setHoaDons] = useState([]);
  const [allOrders, setAllOrders] = useState([]);
  const [hiddenOrders, setHiddenOrders] = useState([]);
  const [showHidden, setShowHidden] = useState(false);
  const location = useLocation();

  useEffect(() => {
    const getHoaDons = async () => {
      try {
        const response = await fetchOrders();
        const storedHiddenOrders = JSON.parse(localStorage.getItem("hiddenOrders")) || [];
        setHiddenOrders(storedHiddenOrders);
        const all = response.data.data || [];
        setAllOrders(all);

        // L·ªçc theo tr·∫°ng th√°i hi·ªÉn th·ªã
        const filtered = showHidden
          ? all.filter((order) => storedHiddenOrders.includes(order._id))
          : all.filter((order) => !storedHiddenOrders.includes(order._id));
        setHoaDons(filtered);
      } catch (error) {
        console.error("L·ªói khi t·∫£i danh s√°ch h√≥a ƒë∆°n:", error);
        message.error("L·ªói khi t·∫£i danh s√°ch h√≥a ƒë∆°n!");
      }
    };

    getHoaDons();
  }, [location.key, showHidden]);

  const handleHideOrder = (id) => {
    const updatedHiddenOrders = [...hiddenOrders, id];
    setHiddenOrders(updatedHiddenOrders);
    localStorage.setItem("hiddenOrders", JSON.stringify(updatedHiddenOrders));

    // C·∫≠p nh·∫≠t danh s√°ch ƒë∆°n hi·ªÉn th·ªã
    setHoaDons(hoaDons.filter((order) => order._id !== id));
    message.success("ƒê√£ ·∫©n ƒë∆°n h√†ng th√†nh c√¥ng");
  };

  const handleRestoreOrder = (id) => {
    const updatedHiddenOrders = hiddenOrders.filter((item) => item !== id);
    setHiddenOrders(updatedHiddenOrders);
    localStorage.setItem("hiddenOrders", JSON.stringify(updatedHiddenOrders));

    // C·∫≠p nh·∫≠t l·∫°i danh s√°ch ƒë∆°n hi·ªÉn th·ªã
    setHoaDons(allOrders.filter((order) =>
      showHidden
        ? updatedHiddenOrders.includes(order._id)
        : !updatedHiddenOrders.includes(order._id)
    ));
    message.success("ƒê√£ kh√¥i ph·ª•c ƒë∆°n h√†ng");
  };

  return (
    <div>
      <h1 className="h3 mb-2 text-gray-800">Danh s√°ch h√≥a ƒë∆°n</h1>
      <div className="card shadow mb-4">
        <div className="card-header py-3 d-flex justify-content-between align-items-center">
          <h6 className="m-0 font-weight-bold text-primary">Database h√≥a ƒë∆°n</h6>
          <button
            className="btn btn-secondary"
            onClick={() => setShowHidden(!showHidden)}
          >
            {showHidden ? "üîô Quay l·∫°i danh s√°ch ch√≠nh" : "üëª Xem ƒë∆°n h√†ng ƒë√£ ·∫©n"}
          </button>
        </div>
        <div className="card-body">
          <div className="table-responsive">
            <table className="table table-hover table-bordered dataTable no-footer">
              <thead>
                <tr>
                  <th>STT</th>
                  <th>Ng∆∞·ªùi nh·∫≠n</th>
                  <th>S·ªë ƒëi·ªán tho·∫°i</th>
                  <th>ƒê·ªãa ch·ªâ</th>
                  <th>T·ªïng ti·ªÅn</th>
                  <th>Tr·∫°ng th√°i</th>
                  <th>H√†nh ƒë·ªông</th>
                </tr>
              </thead>
              <tbody>
                {hoaDons.length > 0 ? (
                  hoaDons.map((hoaDon, i) => (
                    <tr key={hoaDon._id}>
                      <td>{i + 1}</td>
                      <td>{hoaDon.shippingInfo.name || "Kh√¥ng c√≥"}</td>
                      <td>{hoaDon.shippingInfo.phone || "Kh√¥ng c√≥"}</td>
                      <td>{hoaDon.shippingInfo.address || "Kh√¥ng c√≥"}</td>
                      <td>{hoaDon.total || "Kh√¥ng c√≥"}</td>
                      <td>{hoaDon.paymentStatus || "Kh√¥ng c√≥"}</td>
                      <td>
                        <Link
                          to={`/admin/orders/${hoaDon._id}`}
                          className="btn btn-info ml-2"
                        >
                          üëÅÔ∏è Xem chi ti·∫øt
                        </Link>
                        {!showHidden && (
                          (hoaDon.paymentStatus === "Hu·ª∑ ƒê∆°n" ||
                            hoaDon.paymentStatus === "Ho√†n th√†nh") && (
                            <button
                              onClick={() => handleHideOrder(hoaDon._id)}
                              className="btn btn-warning ml-2"
                            >
                              üö´ ·∫®n ƒë∆°n h√†ng
                            </button>
                          )
                        )}
                        {showHidden && (
                          <button
                            onClick={() => handleRestoreOrder(hoaDon._id)}
                            className="btn btn-success ml-2"
                          >
                            ‚ôªÔ∏è Kh√¥i ph·ª•c
                          </button>
                        )}
                      </td>
                    </tr>
                  ))
                ) : (
                  <tr>
                    <td colSpan="8" className="text-center">
                      Kh√¥ng c√≥ d·ªØ li·ªáu h√≥a ƒë∆°n.
                    </td>
                  </tr>
                )}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
};

export default OrderList;
